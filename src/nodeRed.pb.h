/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.1 */

#ifndef PB_NODERED_PB_H_INCLUDED
#define PB_NODERED_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _nodeRed {
    bool has_temperatura;
    float temperatura;
    bool has_humedad;
    float humedad;
    bool has_humedadSuelo;
    float humedadSuelo;
    bool has_fotoreceptor;
    float fotoreceptor;
} nodeRed;


/* Initializer values for message structs */
#define nodeRed_init_default                     {false, 0, false, 0, false, 0, false, 0}
#define nodeRed_init_zero                        {false, 0, false, 0, false, 0, false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define nodeRed_temperatura_tag                  1
#define nodeRed_humedad_tag                      2
#define nodeRed_humedadSuelo_tag                 3
#define nodeRed_fotoreceptor_tag                 4

/* Struct field encoding specification for nanopb */
#define nodeRed_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, FLOAT,    temperatura,       1) \
X(a, STATIC,   OPTIONAL, FLOAT,    humedad,           2) \
X(a, STATIC,   OPTIONAL, FLOAT,    humedadSuelo,      3) \
X(a, STATIC,   OPTIONAL, FLOAT,    fotoreceptor,      4)
#define nodeRed_CALLBACK NULL
#define nodeRed_DEFAULT NULL

extern const pb_msgdesc_t nodeRed_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define nodeRed_fields &nodeRed_msg

/* Maximum encoded size of messages (where known) */
#define nodeRed_size                             20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
